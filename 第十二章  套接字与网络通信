1.网络通信涉及信息传送、路由、物理连接等诸多步骤，通信两端相互之间需要遵循相同的通信协议。
2.TCP协议是面向连接的，它是提供客户和服务之间的连接。UDP协议是一种面向无连接的协议，它不需要在客户和服务之间建立连接。
3.套接字是应用程序和底层网络协议之间的一个通信端口。套接字有相对应的三种属性：域、类型、协议。
  域： AF_UNIX  UNIX通信域; AF_INET  网络通信 使用IPv4协议;AF_INET6:网络通信 使用IPv6协议
  类型：SOCK_STREAM 字节流套接字  提供面向对象连接的数据流;SOCK_DGRAM  数据报套接字  不保证数据报是顺序、可靠和不重复的。
       SOCK_RAW  raw套接字
4.socketpair()创建一对套接字，可用于父子进程。socket（）创建的只是一个套接字，即两个通信端口之一。
5.套接字地址由主机的IP地址加上端口号组成。IP地址：     域名地址：位于最前面的名字是计算机在局域网中的主机名，指明具体的计算机，较后的名字则指明高一级的域名。域名地址最终要转换为它所代表的数值IP地址。
6.IP地址唯一标识网络中的一台计算机，端口号则区别同一台计算机中不同的服务进程。
7.为了使得采用不同字节顺序的机器之间能够通信，Internet协议规定统一采用big-endian字节顺序，称为网络字节顺序。（大端法）
8.只有提供对外服务的套接字需要用bind（）来命名，客户端则无需调用bind（）。
9.套接字支持两种通信模式：有连接模式和无连接模式;流套接字属于有连接方式，数据报套接字属于无连接套接字。
10.请求连接的客户端套接字为“主动”套接字，等待连接请求的服务套接字为“被动”套机字。一个套接字在开始时是主动的，只有在调用了listen（）之后才成为被动的。只有主动套接字可以用于connect（），只有被动套接字可以用于accept（）。
11.服务程序必须在调用bind（）命名地址之后创建一个保存连接请求的侦听队列，然后接收连接。
12.多客户服务：调用fock（）函数派生子进程来处理客户的请求
13.send（）、recv()、read（）、write（）用于套接字的读写。
14.数据报套接字使用UDP协议，它使用sendto（）和recvfrom（）收发数据。


第二次阅读
1.每个应用在应用层都应该有自己的协议，进行合适的通信，在使用TCP时，可靠性由TCP协议保证，使用UDP，可靠性应由应用自己保证。套接字处于应用层和传输层之间。套接字也解释为文件描述字。两个相互通信的套接字必须指定相同的协议。
2.socketpair()创建的套接字偶对与管道十分类似，返回的套机字描述字数组中0与1相连，但每端都可以全双工通信，管道一端只能使用半双工通信。
3.封装一整形数据于一个消息中并通过套接字发送出去，应当将它转换为网络字节顺序。
