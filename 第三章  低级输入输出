1.文件描述字的打开、创建和关闭：open（）用于打开或创建一个文件，open（）返回的描述字一定是当前最小未使用的描述字;creat（）用于创建一个文件;close（）用于关闭已打开的文件描述字。
2.每一个进程都有预先打开的三个文件描述字：0、1、2,分别对应于标准输入、标准输出、标准错误。STDIN_FILENO、STDOUT_FILENO、STDERR_FILENO分别表示这三个文件描述字。
3.每一个进程都有一个进程打开文件表，每一个元素对应一个文件描述字，元素记录以下信息：文件描述字标签、指向系统打开文件表项的指针。系统文件表：每一个表项代表一个已打开的文件，记录以下信息：文件状态标签、当前文件位置、指向该文件v-node的指针。v-node结构：vnode信息、inode信息、当前文件大小。
4.文件描述字总是从最小可用的描述字开始分配。
  子进程总是继承父进程的所有描述字。
  每一次write（）完成后，系统打开文件表项中当前文件位置将增加所写的字节数。
  如果文件是用O_APPEND标志打开的，该标志将被设置在系统文件打开表项的文件状态标签中，强制write（）只能在当前文件末尾添加数据。
  如果一个文件位置被lseek（）定位以当前文件尾，只是用inode中的当前文件大小设置系统打开文件表中的当前文件位置。
  一个进程或多个进程的多个文件描述字可以指向同一个系统打开文件表项。
5.read（）、write（）返回读入或写入的字节数。
6.lseek（）设置文件描述字的文件文件位置。
7.dup（）和dup2（）：新描述字和旧描述字使用同一个打开的文件，即共享同一个系统打开文件表项。
8.文件状态标签：访问方式、打开时标志、I/O操作方式。访问方式在打开文件时设定，一旦设定便不能改变。打开时标志只在打开时使用，之后不再保留。唯一可以设置的是I/O操作方式即O_APPEND、O_NONBLOCK。
9.对于给定的文件描述字，指定非阻塞I/O方法：在open（）时指定O_NONBLOCK文件状态标志、已经打开的描述字，调用fcntl（）函数设置O_NONBLOCK文件状态标志。
10.调用write（）并不是马上写到磁盘，而是先保存在内核I/O数据缓冲区，然后在一定的时机在写入磁盘。如果必须马上写到磁盘，可以对文件设置O_SYNC标志或调用fsync（）和fdatasync（）函数。内核I/O缓冲区是由操作系统管理，而流缓冲区由标准I/O 库管理的用户空间。
